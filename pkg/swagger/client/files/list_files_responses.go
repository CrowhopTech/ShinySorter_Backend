// Code generated by go-swagger; DO NOT EDIT.

package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/CrowhopTech/shinysorter/backend/pkg/swagger/models"
)

// ListFilesReader is a Reader for the ListFiles structure.
type ListFilesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListFilesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListFilesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListFilesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListFilesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListFilesOK creates a ListFilesOK with default headers values
func NewListFilesOK() *ListFilesOK {
	return &ListFilesOK{}
}

/* ListFilesOK describes a response with status code 200, with default header values.

Search was successful (may return an empty array)
*/
type ListFilesOK struct {

	/* How many files are matched in total by this query. Only included when "continue" is empty (e.g. the first page)
	 */
	XFileCount int64

	Payload []*models.FileEntry
}

func (o *ListFilesOK) Error() string {
	return fmt.Sprintf("[GET /files][%d] listFilesOK  %+v", 200, o.Payload)
}
func (o *ListFilesOK) GetPayload() []*models.FileEntry {
	return o.Payload
}

func (o *ListFilesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-FileCount
	hdrXFileCount := response.GetHeader("X-FileCount")

	if hdrXFileCount != "" {
		valxFileCount, err := swag.ConvertInt64(hdrXFileCount)
		if err != nil {
			return errors.InvalidType("X-FileCount", "header", "int64", hdrXFileCount)
		}
		o.XFileCount = valxFileCount
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListFilesBadRequest creates a ListFilesBadRequest with default headers values
func NewListFilesBadRequest() *ListFilesBadRequest {
	return &ListFilesBadRequest{}
}

/* ListFilesBadRequest describes a response with status code 400, with default header values.

Some part of the request was invalid. More information will be included in the error string
*/
type ListFilesBadRequest struct {
	Payload string
}

func (o *ListFilesBadRequest) Error() string {
	return fmt.Sprintf("[GET /files][%d] listFilesBadRequest  %+v", 400, o.Payload)
}
func (o *ListFilesBadRequest) GetPayload() string {
	return o.Payload
}

func (o *ListFilesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListFilesInternalServerError creates a ListFilesInternalServerError with default headers values
func NewListFilesInternalServerError() *ListFilesInternalServerError {
	return &ListFilesInternalServerError{}
}

/* ListFilesInternalServerError describes a response with status code 500, with default header values.

Something else went wrong during the request
*/
type ListFilesInternalServerError struct {
	Payload string
}

func (o *ListFilesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /files][%d] listFilesInternalServerError  %+v", 500, o.Payload)
}
func (o *ListFilesInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *ListFilesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
