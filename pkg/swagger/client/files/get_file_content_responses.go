// Code generated by go-swagger; DO NOT EDIT.

package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetFileContentReader is a Reader for the GetFileContent structure.
type GetFileContentReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *GetFileContentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFileContentOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetFileContentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFileContentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFileContentOK creates a GetFileContentOK with default headers values
func NewGetFileContentOK(writer io.Writer) *GetFileContentOK {
	return &GetFileContentOK{

		Payload: writer,
	}
}

/* GetFileContentOK describes a response with status code 200, with default header values.

Returns the file or thumbnail contents
*/
type GetFileContentOK struct {
	ContentType string

	Payload io.Writer
}

func (o *GetFileContentOK) Error() string {
	return fmt.Sprintf("[GET /files/contents/{id}][%d] getFileContentOK  %+v", 200, o.Payload)
}
func (o *GetFileContentOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *GetFileContentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Type
	hdrContentType := response.GetHeader("Content-Type")

	if hdrContentType != "" {
		o.ContentType = hdrContentType
	}

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileContentNotFound creates a GetFileContentNotFound with default headers values
func NewGetFileContentNotFound() *GetFileContentNotFound {
	return &GetFileContentNotFound{}
}

/* GetFileContentNotFound describes a response with status code 404, with default header values.

The given file was not found.
*/
type GetFileContentNotFound struct {
}

func (o *GetFileContentNotFound) Error() string {
	return fmt.Sprintf("[GET /files/contents/{id}][%d] getFileContentNotFound ", 404)
}

func (o *GetFileContentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFileContentInternalServerError creates a GetFileContentInternalServerError with default headers values
func NewGetFileContentInternalServerError() *GetFileContentInternalServerError {
	return &GetFileContentInternalServerError{}
}

/* GetFileContentInternalServerError describes a response with status code 500, with default header values.

Something else went wrong during the request
*/
type GetFileContentInternalServerError struct {
	Payload string
}

func (o *GetFileContentInternalServerError) Error() string {
	return fmt.Sprintf("[GET /files/contents/{id}][%d] getFileContentInternalServerError  %+v", 500, o.Payload)
}
func (o *GetFileContentInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *GetFileContentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
