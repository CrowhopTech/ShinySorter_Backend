// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/CrowhopTech/shinysorter/backend/pkg/swagger/models"
)

// NewPatchImageByIDParams creates a new PatchImageByIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchImageByIDParams() *PatchImageByIDParams {
	return &PatchImageByIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchImageByIDParamsWithTimeout creates a new PatchImageByIDParams object
// with the ability to set a timeout on a request.
func NewPatchImageByIDParamsWithTimeout(timeout time.Duration) *PatchImageByIDParams {
	return &PatchImageByIDParams{
		timeout: timeout,
	}
}

// NewPatchImageByIDParamsWithContext creates a new PatchImageByIDParams object
// with the ability to set a context for a request.
func NewPatchImageByIDParamsWithContext(ctx context.Context) *PatchImageByIDParams {
	return &PatchImageByIDParams{
		Context: ctx,
	}
}

// NewPatchImageByIDParamsWithHTTPClient creates a new PatchImageByIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewPatchImageByIDParamsWithHTTPClient(client *http.Client) *PatchImageByIDParams {
	return &PatchImageByIDParams{
		HTTPClient: client,
	}
}

/* PatchImageByIDParams contains all the parameters to send to the API endpoint
   for the patch image by Id operation.

   Typically these are written to a http.Request.
*/
type PatchImageByIDParams struct {

	/* ID.

	   Image ID
	*/
	ID string

	/* Patch.

	   Patch modifications for the image
	*/
	Patch *models.Image

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch image by Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchImageByIDParams) WithDefaults() *PatchImageByIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch image by Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchImageByIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the patch image by Id params
func (o *PatchImageByIDParams) WithTimeout(timeout time.Duration) *PatchImageByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch image by Id params
func (o *PatchImageByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch image by Id params
func (o *PatchImageByIDParams) WithContext(ctx context.Context) *PatchImageByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch image by Id params
func (o *PatchImageByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch image by Id params
func (o *PatchImageByIDParams) WithHTTPClient(client *http.Client) *PatchImageByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch image by Id params
func (o *PatchImageByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the patch image by Id params
func (o *PatchImageByIDParams) WithID(id string) *PatchImageByIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the patch image by Id params
func (o *PatchImageByIDParams) SetID(id string) {
	o.ID = id
}

// WithPatch adds the patch to the patch image by Id params
func (o *PatchImageByIDParams) WithPatch(patch *models.Image) *PatchImageByIDParams {
	o.SetPatch(patch)
	return o
}

// SetPatch adds the patch to the patch image by Id params
func (o *PatchImageByIDParams) SetPatch(patch *models.Image) {
	o.Patch = patch
}

// WriteToRequest writes these params to a swagger request
func (o *PatchImageByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}
	if o.Patch != nil {
		if err := r.SetBodyParam(o.Patch); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
