// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/CrowhopTech/shinysorter/backend/pkg/swagger/models"
)

// ListTagsReader is a Reader for the ListTags structure.
type ListTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListTagsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewListTagsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListTagsOK creates a ListTagsOK with default headers values
func NewListTagsOK() *ListTagsOK {
	return &ListTagsOK{}
}

/* ListTagsOK describes a response with status code 200, with default header values.

Tags were listed successfully (array may be empty if no tags are registered)
*/
type ListTagsOK struct {
	Payload []*models.Tag
}

func (o *ListTagsOK) Error() string {
	return fmt.Sprintf("[GET /tags][%d] listTagsOK  %+v", 200, o.Payload)
}
func (o *ListTagsOK) GetPayload() []*models.Tag {
	return o.Payload
}

func (o *ListTagsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTagsInternalServerError creates a ListTagsInternalServerError with default headers values
func NewListTagsInternalServerError() *ListTagsInternalServerError {
	return &ListTagsInternalServerError{}
}

/* ListTagsInternalServerError describes a response with status code 500, with default header values.

Something else went wrong during the request
*/
type ListTagsInternalServerError struct {
	Payload string
}

func (o *ListTagsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /tags][%d] listTagsInternalServerError  %+v", 500, o.Payload)
}
func (o *ListTagsInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *ListTagsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
