// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/CrowhopTech/shinysorter/backend/pkg/swagger/models"
)

// GetFileByIDReader is a Reader for the GetFileByID structure.
type GetFileByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFileByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFileByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetFileByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFileByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFileByIDOK creates a GetFileByIDOK with default headers values
func NewGetFileByIDOK() *GetFileByIDOK {
	return &GetFileByIDOK{}
}

/* GetFileByIDOK describes a response with status code 200, with default header values.

Returns the found file.
*/
type GetFileByIDOK struct {
	Payload *models.FileEntry
}

func (o *GetFileByIDOK) Error() string {
	return fmt.Sprintf("[GET /files/{id}][%d] getFileByIdOK  %+v", 200, o.Payload)
}
func (o *GetFileByIDOK) GetPayload() *models.FileEntry {
	return o.Payload
}

func (o *GetFileByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FileEntry)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileByIDNotFound creates a GetFileByIDNotFound with default headers values
func NewGetFileByIDNotFound() *GetFileByIDNotFound {
	return &GetFileByIDNotFound{}
}

/* GetFileByIDNotFound describes a response with status code 404, with default header values.

The given file was not found.
*/
type GetFileByIDNotFound struct {
}

func (o *GetFileByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /files/{id}][%d] getFileByIdNotFound ", 404)
}

func (o *GetFileByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFileByIDInternalServerError creates a GetFileByIDInternalServerError with default headers values
func NewGetFileByIDInternalServerError() *GetFileByIDInternalServerError {
	return &GetFileByIDInternalServerError{}
}

/* GetFileByIDInternalServerError describes a response with status code 500, with default header values.

Something else went wrong during the request
*/
type GetFileByIDInternalServerError struct {
	Payload string
}

func (o *GetFileByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /files/{id}][%d] getFileByIdInternalServerError  %+v", 500, o.Payload)
}
func (o *GetFileByIDInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *GetFileByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
