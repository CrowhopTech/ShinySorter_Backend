// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/CrowhopTech/shinysorter/backend/pkg/swagger/models"
)

// DeleteTagReader is a Reader for the DeleteTag structure.
type DeleteTagReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTagReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteTagOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteTagBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteTagInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteTagOK creates a DeleteTagOK with default headers values
func NewDeleteTagOK() *DeleteTagOK {
	return &DeleteTagOK{}
}

/* DeleteTagOK describes a response with status code 200, with default header values.

Tag was deleted successfully
*/
type DeleteTagOK struct {
	Payload *models.TagEntry
}

func (o *DeleteTagOK) Error() string {
	return fmt.Sprintf("[DELETE /tags/{id}][%d] deleteTagOK  %+v", 200, o.Payload)
}
func (o *DeleteTagOK) GetPayload() *models.TagEntry {
	return o.Payload
}

func (o *DeleteTagOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TagEntry)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTagBadRequest creates a DeleteTagBadRequest with default headers values
func NewDeleteTagBadRequest() *DeleteTagBadRequest {
	return &DeleteTagBadRequest{}
}

/* DeleteTagBadRequest describes a response with status code 400, with default header values.

Some part of the request was invalid. More information will be included in the error string
*/
type DeleteTagBadRequest struct {
	Payload string
}

func (o *DeleteTagBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /tags/{id}][%d] deleteTagBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteTagBadRequest) GetPayload() string {
	return o.Payload
}

func (o *DeleteTagBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTagInternalServerError creates a DeleteTagInternalServerError with default headers values
func NewDeleteTagInternalServerError() *DeleteTagInternalServerError {
	return &DeleteTagInternalServerError{}
}

/* DeleteTagInternalServerError describes a response with status code 500, with default header values.

Something else went wrong during the request
*/
type DeleteTagInternalServerError struct {
	Payload string
}

func (o *DeleteTagInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /tags/{id}][%d] deleteTagInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteTagInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *DeleteTagInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
