// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetFileContentOKCode is the HTTP code returned for type GetFileContentOK
const GetFileContentOKCode int = 200

/*GetFileContentOK Returns the file or thumbnail contents

swagger:response getFileContentOK
*/
type GetFileContentOK struct {
	/*

	 */
	ContentType string `json:"Content-Type"`

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewGetFileContentOK creates GetFileContentOK with default headers values
func NewGetFileContentOK() *GetFileContentOK {

	return &GetFileContentOK{}
}

// WithContentType adds the contentType to the get file content o k response
func (o *GetFileContentOK) WithContentType(contentType string) *GetFileContentOK {
	o.ContentType = contentType
	return o
}

// SetContentType sets the contentType to the get file content o k response
func (o *GetFileContentOK) SetContentType(contentType string) {
	o.ContentType = contentType
}

// WithPayload adds the payload to the get file content o k response
func (o *GetFileContentOK) WithPayload(payload io.ReadCloser) *GetFileContentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get file content o k response
func (o *GetFileContentOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFileContentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Content-Type

	contentType := o.ContentType
	if contentType != "" {
		rw.Header().Set("Content-Type", contentType)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetFileContentNotFoundCode is the HTTP code returned for type GetFileContentNotFound
const GetFileContentNotFoundCode int = 404

/*GetFileContentNotFound The given file was not found.

swagger:response getFileContentNotFound
*/
type GetFileContentNotFound struct {
}

// NewGetFileContentNotFound creates GetFileContentNotFound with default headers values
func NewGetFileContentNotFound() *GetFileContentNotFound {

	return &GetFileContentNotFound{}
}

// WriteResponse to the client
func (o *GetFileContentNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// GetFileContentInternalServerErrorCode is the HTTP code returned for type GetFileContentInternalServerError
const GetFileContentInternalServerErrorCode int = 500

/*GetFileContentInternalServerError Something else went wrong during the request

swagger:response getFileContentInternalServerError
*/
type GetFileContentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetFileContentInternalServerError creates GetFileContentInternalServerError with default headers values
func NewGetFileContentInternalServerError() *GetFileContentInternalServerError {

	return &GetFileContentInternalServerError{}
}

// WithPayload adds the payload to the get file content internal server error response
func (o *GetFileContentInternalServerError) WithPayload(payload string) *GetFileContentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get file content internal server error response
func (o *GetFileContentInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFileContentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
