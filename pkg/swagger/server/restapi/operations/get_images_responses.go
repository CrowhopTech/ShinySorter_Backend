// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/CrowhopTech/shinysorter/backend/pkg/swagger/server/models"
)

// GetImagesOKCode is the HTTP code returned for type GetImagesOK
const GetImagesOKCode int = 200

/*GetImagesOK Images were found matching the given query

swagger:response getImagesOK
*/
type GetImagesOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Image `json:"body,omitempty"`
}

// NewGetImagesOK creates GetImagesOK with default headers values
func NewGetImagesOK() *GetImagesOK {

	return &GetImagesOK{}
}

// WithPayload adds the payload to the get images o k response
func (o *GetImagesOK) WithPayload(payload []*models.Image) *GetImagesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get images o k response
func (o *GetImagesOK) SetPayload(payload []*models.Image) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetImagesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Image, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetImagesBadRequestCode is the HTTP code returned for type GetImagesBadRequest
const GetImagesBadRequestCode int = 400

/*GetImagesBadRequest Some part of the request was invalid. More information will be included in the error string

swagger:response getImagesBadRequest
*/
type GetImagesBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetImagesBadRequest creates GetImagesBadRequest with default headers values
func NewGetImagesBadRequest() *GetImagesBadRequest {

	return &GetImagesBadRequest{}
}

// WithPayload adds the payload to the get images bad request response
func (o *GetImagesBadRequest) WithPayload(payload string) *GetImagesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get images bad request response
func (o *GetImagesBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetImagesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetImagesNotFoundCode is the HTTP code returned for type GetImagesNotFound
const GetImagesNotFoundCode int = 404

/*GetImagesNotFound No images were found matching the given query. Also returns an empty array for easier parsing

swagger:response getImagesNotFound
*/
type GetImagesNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetImagesNotFound creates GetImagesNotFound with default headers values
func NewGetImagesNotFound() *GetImagesNotFound {

	return &GetImagesNotFound{}
}

// WithPayload adds the payload to the get images not found response
func (o *GetImagesNotFound) WithPayload(payload string) *GetImagesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get images not found response
func (o *GetImagesNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetImagesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetImagesInternalServerErrorCode is the HTTP code returned for type GetImagesInternalServerError
const GetImagesInternalServerErrorCode int = 500

/*GetImagesInternalServerError Something else went wrong during the request

swagger:response getImagesInternalServerError
*/
type GetImagesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetImagesInternalServerError creates GetImagesInternalServerError with default headers values
func NewGetImagesInternalServerError() *GetImagesInternalServerError {

	return &GetImagesInternalServerError{}
}

// WithPayload adds the payload to the get images internal server error response
func (o *GetImagesInternalServerError) WithPayload(payload string) *GetImagesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get images internal server error response
func (o *GetImagesInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetImagesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
