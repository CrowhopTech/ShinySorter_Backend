// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// CreateFileHandlerFunc turns a function with the right signature into a create file handler
type CreateFileHandlerFunc func(CreateFileParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateFileHandlerFunc) Handle(params CreateFileParams) middleware.Responder {
	return fn(params)
}

// CreateFileHandler interface for that can handle valid create file params
type CreateFileHandler interface {
	Handle(CreateFileParams) middleware.Responder
}

// NewCreateFile creates a new http.Handler for the create file operation
func NewCreateFile(ctx *middleware.Context, handler CreateFileHandler) *CreateFile {
	return &CreateFile{Context: ctx, Handler: handler}
}

/* CreateFile swagger:route POST /files/{id} createFile

Creates a new file entry

*/
type CreateFile struct {
	Context *middleware.Context
	Handler CreateFileHandler
}

func (o *CreateFile) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewCreateFileParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
