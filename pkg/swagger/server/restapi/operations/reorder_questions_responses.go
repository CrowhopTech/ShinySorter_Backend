// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// ReorderQuestionsOKCode is the HTTP code returned for type ReorderQuestionsOK
const ReorderQuestionsOKCode int = 200

/*ReorderQuestionsOK Questions were reordered successfully

swagger:response reorderQuestionsOK
*/
type ReorderQuestionsOK struct {
}

// NewReorderQuestionsOK creates ReorderQuestionsOK with default headers values
func NewReorderQuestionsOK() *ReorderQuestionsOK {

	return &ReorderQuestionsOK{}
}

// WriteResponse to the client
func (o *ReorderQuestionsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// ReorderQuestionsBadRequestCode is the HTTP code returned for type ReorderQuestionsBadRequest
const ReorderQuestionsBadRequestCode int = 400

/*ReorderQuestionsBadRequest Some part of the request was invalid. More information will be included in the error string

swagger:response reorderQuestionsBadRequest
*/
type ReorderQuestionsBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewReorderQuestionsBadRequest creates ReorderQuestionsBadRequest with default headers values
func NewReorderQuestionsBadRequest() *ReorderQuestionsBadRequest {

	return &ReorderQuestionsBadRequest{}
}

// WithPayload adds the payload to the reorder questions bad request response
func (o *ReorderQuestionsBadRequest) WithPayload(payload string) *ReorderQuestionsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reorder questions bad request response
func (o *ReorderQuestionsBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReorderQuestionsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ReorderQuestionsInternalServerErrorCode is the HTTP code returned for type ReorderQuestionsInternalServerError
const ReorderQuestionsInternalServerErrorCode int = 500

/*ReorderQuestionsInternalServerError Something else went wrong during the request

swagger:response reorderQuestionsInternalServerError
*/
type ReorderQuestionsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewReorderQuestionsInternalServerError creates ReorderQuestionsInternalServerError with default headers values
func NewReorderQuestionsInternalServerError() *ReorderQuestionsInternalServerError {

	return &ReorderQuestionsInternalServerError{}
}

// WithPayload adds the payload to the reorder questions internal server error response
func (o *ReorderQuestionsInternalServerError) WithPayload(payload string) *ReorderQuestionsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reorder questions internal server error response
func (o *ReorderQuestionsInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReorderQuestionsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
